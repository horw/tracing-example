services:

  otelcol:
    image: otel/opentelemetry-collector
    restart: always
    ports:
      - 4317:4317
    volumes:
      - ./otelcol.yml:/etc/otelcol/config.yaml

  grafana:
    ports:
      - 3000:3000
    image: grafana/grafana:10.4.2
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  metric-job:
    build:
      context: .
    network_mode: host
    command: "python metric_parser.py"

  jaeger:
    restart: always
    image: jaegertracing/all-in-one:1.49
    ports:
      - 16686:16686
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=elasticsearch
    command: [
      "--es.server-urls=http://elasticsearch:9200",
      "--es.num-shards=1",
      "--es.num-replicas=0",
      "--log-level=error"
    ]
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    restart: on-failure
    environment:
      - cluster.name=jaeger-cluster
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data

  loki:
    image: grafana/loki:3.0.0
    command: -config.file=/etc/loki/local-config.yaml

volumes:
  esdata: